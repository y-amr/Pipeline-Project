from sqlalchemy import Column, String

from app.Base import Base


class Parameter(Base):
    __tablename__ = "parameter"
    key = Column(String(256), primary_key=True)
    user_id = Column(String(128), primary_key=True)
    value = Column(String(512), nullable=False)
    USER_COUNTRY_CODE = 'USER_COUNTRY_CODE'
    SERVER_COUNTRY_CODE = 'SERVER_COUNTRY_CODE'
    USER_ID = 'USER_ID'
    USER_PARTY_ID = 'USER_PARTY_ID'
    SERVER_PARTY_ID = 'SERVER_PARTY_ID'
    ENDPOINT = 'ENDPOINT'
    AUTHORISATION_TOKEN_FROMSERVER = 'AUTHORISATION_TOKEN_FROMSERVER'
    AUTHORISATION_TOKEN_TOSERVER = 'AUTHORISATION_TOKEN_TOSERVER'
    GET_MAX_LIMIT = 'GET_MAX_LIMIT'
    GET_NUMBER_ITEMS_RETURNED = 'GET_NUMBER_ITEMS_RETURNED'
    POST_TOKEN_AUTHORIZE_ALLOWED = 'POST_TOKEN_AUTHORIZE_ALLOWED'
    GET_TOKENS_FOUND = 'GET_TOKENS_FOUND'
    GET_LOCATIONS_FOUND = 'GET_LOCATIONS_FOUND'
    GET_SESSIONS_FOUND = 'GET_SESSIONS_FOUND'
    GET_CDRS_FOUND = 'GET_CDRS_FOUND'
    GET_TARIFFS_FOUND = 'GET_TARIFFS_FOUND'
    POST_COMMANDS_RESPONSE_TYPE = 'POST_COMMANDS_RESPONSE_TYPE'
    ENDPOINT_211_CPO_TOKENS = 'ENDPOINT_211_CPO_TOKENS'
    ENDPOINT_211_CPO_COMMANDS = 'ENDPOINT_211_CPO_COMMANDS'
    ENDPOINT_211_CPO_LOCATIONS = 'ENDPOINT_211_CPO_LOCATIONS'
    ENDPOINT_211_CPO_CDRS = 'ENDPOINT_211_CPO_CDRS'
    ENDPOINT_211_CPO_SESSIONS = 'ENDPOINT_211_CPO_SESSIONS'
    ENDPOINT_211_CPO_VERSIONS = 'ENDPOINT_211_CPO_VERSIONS'
    ENDPOINT_211_CPO_CREDENTIALS = 'ENDPOINT_211_CPO_CREDENTIALS'
    ENDPOINT_211_CPO_TARIFFS = 'ENDPOINT_211_CPO_TARIFFS'
    ENDPOINT_211_EMSP_TOKENS = 'ENDPOINT_211_EMSP_TOKENS'
    ENDPOINT_211_EMSP_COMMANDS = 'ENDPOINT_211_EMSP_COMMANDS'
    ENDPOINT_211_EMSP_LOCATIONS = 'ENDPOINT_211_EMSP_LOCATIONS'
    ENDPOINT_211_EMSP_CDRS = 'ENDPOINT_211_EMSP_CDRS'
    ENDPOINT_211_EMSP_SESSIONS = 'ENDPOINT_211_EMSP_SESSIONS'
    ENDPOINT_211_EMSP_VERSIONS = 'ENDPOINT_211_EMSP_VERSIONS'
    ENDPOINT_211_EMSP_CREDENTIALS = 'ENDPOINT_211_EMSP_CREDENTIALS'
    ENDPOINT_211_EMSP_TARIFFS = 'ENDPOINT_211_EMSP_TARIFFS'

    def __repr__(self):
        return '<key : {}, value : {}, user_id : {}>'.format(self.key, self.value, self.user_id)
